name: "Terraform CI Pipeline"

on:
  pull_request:

env:
  TERRAFORM_VERSION: "1.5.7"

permissions:
  id-token: write
  contents: write # Ensure that the workflow has permission to write to PR comments

jobs:
  terraform:
    name: "Terraform Plan"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: Terraform Format
        id: fmtmain
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color
        continue-on-error: true

      - name: Submit PR Comment
        uses: actions/github-script@v7
        env:
          COMMENT_BODY: "${{ steps.plan.outputs.stdout }}"
          COMMENT_TITLE: "${{ github.workflow }}"
          COMMENT_AUTHOR: "${{ github.actor }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const script = require('${{ github.action_path }}/../../src/js/terraform-pr-comment.js')
            await script({github, context})

      - uses: actions/github-script@0.9.0
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
            <details><summary>Show Plan</summary>
            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`
            </details>
            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1
